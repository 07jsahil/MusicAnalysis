yf=factor(df[,15])
res = randomForest(x,yf,mtry=4)
res = randomForest(x,yf,mtry=4)
print(res)
print(importance(res))
res$importanceSD
print(res)
print(importance(res))
res$importanceSD
print(importance(res))
library(xgboost)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
x_train <- df[train_ind, 3:14]
x_test <- df[-train_ind, 3:14]
y_train <- df[train_ind, 15]
y_test <- df[-train_ind, 15]
dftrain <- df[train_ind,3:15]
dftest <- df[-train_ind, 3:15]
y_train
xm_train <- as.matrix(x_train)
xm_test <- as.matrix(x_test)
dtrain <- xgb.DMatrix(data = xm_train, label = y_train)
res <- xgboost(data=dtrain, nrounds=10)
res <- xgboost(data=dtrain, nrounds=100)
res <- xgboost(data=dtrain, nrounds=10)
res <- xgboost(data=dtrain, nrounds=1000)
res <- xgboost(data=dtrain, nrounds=10000)
at=predict(res,xm_test)
at
cm = table(y_test, as.integer(round(at)))
print(cm)
print(chisq.test(cm))
print(cm)
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
y = c(names(train)[11])
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X","genreactual"))
y
names(train)
y = c(names(train)[11])
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X","genreactual"))
x
y
yg = c('genreactual')
xg = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X","genreactual", "emotion"))
x
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
#train<-h2o.importFile("/Users/sahil/Downloads/overall.csv")
#t=as.data.frame(train)
y = c('genreactual')
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X", "emotion"))
smp_size <- floor(0.75 * nrow(train))
train_ind <- sample(seq_len(nrow(train)), size = smp_size)
train=train[train_ind,]
test=train[-train_ind,]
train[,y] = as.factor(train[,y])
test[,y] = as.factor(test[,y])
t1=as.h2o(train)
t2=as.h2o(test)
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12),
epochs = 60)
model
head(t)
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
#train<-h2o.importFile("/Users/sahil/Downloads/overall.csv")
#t=as.data.frame(train)
y = c('genreactual')
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X", "emotion"))
smp_size <- floor(0.75 * nrow(train))
train_ind <- sample(seq_len(nrow(train)), size = smp_size)
train=train[train_ind,]
test=train[-train_ind,]
train[,y] = as.factor(train[,y])
test[,y] = as.factor(test[,y])
t1=as.h2o(train)
t2=as.h2o(test)
gmodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12),
epochs = 60)
gmodel
head(t)
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
#train<-h2o.importFile("/Users/sahil/Downloads/overall.csv")
#t=as.data.frame(train)
y = c(names(train)[11])
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X","genreactual"))
smp_size <- floor(0.75 * nrow(train))
train_ind <- sample(seq_len(nrow(train)), size = smp_size)
train=train[train_ind,]
test=train[-train_ind,]
train[,y] = as.factor(train[,y])
test[,y] = as.factor(test[,y])
t1=as.h2o(train)
t2=as.h2o(test)
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12),
epochs = 60)
emodel
head(t)
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12,12),
epochs = 60)
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12,12),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12,12,12),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12,12,12,12),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(12,12,12,12,12,12),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(20,20),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(30,30),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(50,50),
epochs = 60)
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(50,50),
epochs = 60)
emodel
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(60,60),
epochs = 60)
emodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(60,60),
epochs = 60)
emodel
grenade.mp3
tmp<-readMP3('/Users/Rohit/Desktop/grenade.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
gl1
h2o.predict(emodel,as.h2o(gl1))
h2o.predict(gmodel,as.h2o(gl1))
gmodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(50,50),
epochs = 60)
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
#train<-h2o.importFile("/Users/sahil/Downloads/overall.csv")
#t=as.data.frame(train)
y = c('genreactual')
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X", "emotion"))
smp_size <- floor(0.75 * nrow(train))
train_ind <- sample(seq_len(nrow(train)), size = smp_size)
train=train[train_ind,]
test=train[-train_ind,]
train[,y] = as.factor(train[,y])
test[,y] = as.factor(test[,y])
t1=as.h2o(train)
t2=as.h2o(test)
gmodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(50,50),
epochs = 60)
gmodel
head(t)
gmodel
tmp<-readMP3('/Users/Rohit/Desktop/grenade.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
gl1
h2o.predict(gmodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/grenade.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(gmodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/brick.mp3')
tmp<-readMP3('/Users/Rohit/Desktop/brick.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(gmodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/brick.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(emodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/astronomia.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(emodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/shape.mp3')
tmp<-readMP3('/Users/Rohit/Desktop/shape.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(emodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/paradise.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(gmodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/paradise.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(emodel,as.h2o(gl1))
tmp<-readMP3('/Users/Rohit/Desktop/paradise.mp3')
mfcc5<-melfcc(Wave(tmp@right),sr = tmp@samp.rate, wintime = 5, hoptime = 5)
mfcc5=matrix(t(mfcc5),nrow = 1,ncol = 144)
gl1=data.frame(mfcc5)
h2o.predict(emodel,as.h2o(gl1))
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
#train<-h2o.importFile("/Users/sahil/Downloads/overall.csv")
#t=as.data.frame(train)
y = c('genreactual')
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X", "emotion"))
smp_size <- floor(0.75 * nrow(train))
train_ind <- sample(seq_len(nrow(train)), size = smp_size)
train=train[train_ind,]
test=train[-train_ind,]
train[,y] = as.factor(train[,y])
test[,y] = as.factor(test[,y])
t1=as.h2o(train)
t2=as.h2o(test)
gmodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(50,50),
epochs = 60)
gmodel
head(t)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
library(h2o)
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '4g',nthreads=-1,startH2O = TRUE)
train<-read.csv("/Users/Rohit/Desktop/overall.csv")
y = c('genreactual')
x = setdiff(names(train),c("amazement","solemnity","tenderness","joyful_activation","calmness","tension","nostalgia","power","sadness","genreactual.y","song.y","X.x","genreactual.x","song.x","sg","X.y" ,"X.1","C1",y,"song","X", "emotion"))
smp_size <- floor(0.75 * nrow(train))
train_ind <- sample(seq_len(nrow(train)), size = smp_size)
train=train[train_ind,]
test=train[-train_ind,]
train[,y] = as.factor(train[,y])
test[,y] = as.factor(test[,y])
t1=as.h2o(train)
t2=as.h2o(test)
gmodel = h2o.deeplearning(x=x,
y=y,
training_frame=t1,
validation_frame=t2,
hidden = c(50,50),
epochs = 60)
gmodel
head(t)
tmp2<-readMP3('~/Desktop/emotifymusic/rock/1.mp3')
mfcc<-melfcc(Wave(tmp2@right),sr = tmp2@samp.rate, wintime = 10, hoptime = 10)
mfcc<-melfcc(Wave(tmp2@right),sr = tmp2@samp.rate, wintime = 10, hoptime = 10)
as.data.frame(mfcc)
setWavPlayer('/usr/bin/afplay')
-------------kmeans
song<-readMP3('~/Desktop/emotifymusic/rock/1.mp3')
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10)
as.data.frame(mfcc)
#KMeans
d1=read.csv("~/Desktop/emotifymusic/dfs/mfccclassical.csv")
d2=read.csv("~/Desktop/emotifymusic/dfs/mfccrock.csv")
d3=read.csv("~/Desktop/emotifymusic/dfs/mfccpop.csv")
d4=read.csv("~/Desktop/emotifymusic/dfs/mfccelectronic.csv")
df=rbind(d1,d2,d3,d4)
write.csv(df,"~/Desktop/emotifymusic/dfs/mfcc.csv")
head(df)
lc<-kmeans(df[,3:14],4,nstart = 50,iter.max = 100)
table(lc$cluster,df$Genre)
#    classical rock pop electronic
#  1        17  135  54         37
#  2       290   67 133        184
#  3        93  385 393        283
#  4       186   13  19         96
df=read.csv("~/Desktop/emotifymusic/dfs/mfcc.csv")
drops <- c("X.1")
df=df[ , !(names(df) %in% drops)]
df
#KMeans
d1=read.csv("~/Desktop/emotifymusic/dfs/mfccclassical.csv")
d2=read.csv("~/Desktop/emotifymusic/dfs/mfccrock.csv")
d3=read.csv("~/Desktop/emotifymusic/dfs/mfccpop.csv")
d4=read.csv("~/Desktop/emotifymusic/dfs/mfccelectronic.csv")
df=rbind(d1,d2,d3,d4)
#write.csv(df,"~/Desktop/emotifymusic/dfs/mfcc.csv")
head(df)
lc<-kmeans(df[,3:14],4,nstart = 50,iter.max = 100)
table(lc$cluster,df$Genre)
#KMeans
d1=read.csv("~/Desktop/emotifymusic/dfs/mfccclassical.csv")
d2=read.csv("~/Desktop/emotifymusic/dfs/mfccrock.csv")
d3=read.csv("~/Desktop/emotifymusic/dfs/mfccpop.csv")
d4=read.csv("~/Desktop/emotifymusic/dfs/mfccelectronic.csv")
df=rbind(d1,d2,d3,d4)
#write.csv(df,"~/Desktop/emotifymusic/dfs/mfcc.csv")
lc<-kmeans(df[,3:14],4,nstart = 50,iter.max = 100)
table(lc$cluster,df$Genre)
#KNN
library(class)
df=read.csv("~/Desktop/emotifymusic/dfs/mfcc.csv")
drops <- c("X.1")
df=df[ , !(names(df) %in% drops)]
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
x_train <- df[train_ind, 3:14]
x_test <- df[-train_ind, 3:14]
y_train <- df[train_ind, 15]
y_test <- df[-train_ind, 15]
#RUN knn
res = knn(x_train, x_test, y_train, k = 4, prob = TRUE)
table(res,y_test)
#            y_test
#res          classical electronic pop rock
#  classical        142         23  10   11
#  electronic         3         88  23   14
#  pop                3         17  94   19
#  rock               3         23  32   92
res
res
#KNN
library(class)
df=read.csv("~/Desktop/emotifymusic/dfs/mfcc.csv")
drops <- c("X.1")
df=df[ , !(names(df) %in% drops)]
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
x_train <- df[train_ind, 3:14]
x_test <- df[-train_ind, 3:14]
y_train <- df[train_ind, 15]
y_test <- df[-train_ind, 15]
#RUN knn
res = knn(x_train, x_test, y_train, k = 4, prob = TRUE)
table(res,y_test)
library(rpart)
library(caret)
fit = rpart(Genre~mfcc.1+mfcc.2+mfcc.3+mfcc.4+mfcc.1+mfcc.2+mfcc.3+mfcc.4
+mfcc.5+mfcc.6+mfcc.7+mfcc.8+mfcc.9+mfcc.10+mfcc.11+mfcc.12, method="class", data=df)
printcp(fit)
summary(fit)
pred = predict(fit, type="class")
confusionMatrix(pred,df$Genre)
summary(res)
res
names(res)
table(res,y_test)
printcp(fit)
summary(fit)
summary(fit$variable.importance)
summary(fit$variable.importance)
fit$variable.importance
summary(fit)
confusionMatrix(pred,df$Genre)
library(randomForest)
x = as.matrix(df[3:14])
yf=factor(df[,15])
res = randomForest(x,yf,mtry=4)
res = randomForest(x,yf,mtry=4)
print(res)
print(importance(res))
print(res)
library(xgboost)
smp_size <- floor(0.75 * nrow(df))
library(xgboost)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
x_train <- df[train_ind, 3:14]
x_test <- df[-train_ind, 3:14]
y_train <- df[train_ind, 15]
y_test <- df[-train_ind, 15]
dftrain <- df[train_ind,3:15]
dftest <- df[-train_ind, 3:15]
xm_train <- as.matrix(x_train)
xm_test <- as.matrix(x_test)
dtrain <- xgb.DMatrix(data = xm_train, label = y_train)
res <- xgboost(data=dtrain, nrounds=10)
res
at=predict(res,xm_test)
at
cm = table(y_test, as.integer(round(at)))
print(cm)
print(chisq.test(cm))
# 10 rounds
#y_test         1   2   3   4
#  classical   90  41  10   0
#  electronic  29  62  45   4
#  pop          6  34 102   4
#  rock         2  28  98  42
#1000 rounds
#y_test        1  2  3  4  5
#  classical  99 42  6  0  0
#  electronic 15 76 51  6  0
#  pop         8 30 87 11  0
#  rock        2 16 80 67  1
library(xgboost)
smp_size <- floor(0.75 * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
x_train <- df[train_ind, 3:14]
x_test <- df[-train_ind, 3:14]
y_train <- df[train_ind, 15]
y_test <- df[-train_ind, 15]
dftrain <- df[train_ind,3:15]
dftest <- df[-train_ind, 3:15]
xm_train <- as.matrix(x_train)
xm_test <- as.matrix(x_test)
dtrain <- xgb.DMatrix(data = xm_train, label = y_train)
res <- xgboost(data=dtrain, nrounds=10)
res
at=predict(res,xm_test)
cm = table(y_test, as.integer(round(at)))
print(cm)
print(chisq.test(cm))
# 10 rounds
#y_test         1   2   3   4
#  classical   90  41  10   0
#  electronic  29  62  45   4
#  pop          6  34 102   4
#  rock         2  28  98  42
#1000 rounds
#y_test        1  2  3  4  5
#  classical  99 42  6  0  0
#  electronic 15 76 51  6  0
#  pop         8 30 87 11  0
#  rock        2 16 80 67  1
song<-readMP3('~/Desktop/emotifymusic/rock/1.mp3')
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10)
as.data.frame(mfcc)
#setWavPlayer('/usr/bin/afplay')
#play(song)
song<-readMP3('~/Desktop/emotifymusic/rock/1.mp3')
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10, )
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10, )
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10,
song<-readMP3('~/Desktop/emotifymusic/rock/1.mp3')
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10)
song<-readMP3('~/Desktop/emotifymusic/rock/1.mp3')
mfcc<-melfcc(Wave(song@right),sr = song@samp.rate, wintime = 10, hoptime = 10)
as.data.frame(mfcc)
```{r,echo=FALSE}
options(warn = -1)
options(warn = 0)
